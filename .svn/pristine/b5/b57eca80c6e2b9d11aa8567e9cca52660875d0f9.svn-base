<div class="mainContainer" id="root">
    <div class="layui-form" action="">
        <div class="layui-form-item" v-if="!!isnew">
            <label class="layui-form-label">当前节点编码</label>
            <div class="layui-input-inline">
                <input type="text" name="title" lay-verify="title" autocomplete="off" placeholder="请输入标题" class="layui-input" v-model="formList.ParentCode" disabled>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">科目名称</label>
            <div class="layui-input-inline">
                <input type="text" name="title" lay-verify="required" autocomplete="off" placeholder="请输入标题" class="layui-input" v-model="formList.Name">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">辅助核算</label>
            <div class="layui-input-block">
                <xinfei-chb v-bind:option="CheckedSetting1" v-bind:value.sync="formList.ProjectCheck" initial="off"></xinfei-chb>
                <xinfei-chb v-bind:option="CheckedSetting2" v-bind:value.sync="formList.ClientCheck" initial="off"></xinfei-chb>
                <xinfei-chb v-bind:option="CheckedSetting3" v-bind:value.sync="formList.DepartmentCheck" initial="off"></xinfei-chb>
                <xinfei-chb v-bind:option="CheckedSetting4" v-bind:value.sync="formList.PersonCheck" initial="off"></xinfei-chb>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">余额方向</label>
            <div class="layui-input-block">
                <remote-rad name="BalanceType" v-bind:setting="BalanceTypeSetting" v-bind:value.sync="formList.BalanceType" initial="off"></remote-rad>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">金额方向</label>
            <div class="layui-input-block">
                <remote-rad name="MoneyLeft" v-bind:setting="MoneySetting" v-bind:value.sync="formList.MoneyLeft" initial="off"></remote-rad>
            </div>
        </div>
        <div class="layui-form-item layui-hide">
            <div class="layui-input-block">
                <button class="layui-btn" lay-submit @click="Handlesubmit">立即提交</button>
            </div>
        </div>
    </div>
</div>


<link href="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/layui.css" rel="stylesheet" />
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/layui.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/vue/vue.min.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/require_config.js"></script>
<style>
    .layui-form-checkbox span { height: auto; }
    .layui-form-label { width: 150px; }
    .layui-input-block { margin-left: 180px; }
</style>
<script>
       Vue.component('xinfei-chb',
        {
            template:
                '<input type="checkbox" name="" v-bind:title="option.title" lay-skin="primary" v-model="togglebool" lay-filter="{{ layfilter }}"> ',
            props: ['option', 'value'],
            data: function () {
                return {
                    options: {},
                    layfilter: ""
                };
            },
            watch: {
                'value': function (val) {
                    layui.form.render('checkbox');
                }
            },
            computed:{
                togglebool:function(){
                    return !!Number(this.value)
                }
            },
            ready: function () {
                if (this.value == '' || this.value == undefined) {
                    this.value = '0';
                }
                this.initEvent();
                this.init();
            },
            methods: {
                initEvent: function () {
                    var self = this;
                    this.layfilter = "layfilter" + (Math.random() + "").substr(2) + new Date().getTime();
                    layui.form.on("checkbox(" + this.layfilter + ")",
                        function (data) {
                            if (data.elem.checked) {
                                self.value='1';
                            } else {
                                self.value='0';
                            }
                        });
                },
                init: function () {
                    this.$nextTick(function () {
                        layui.form.render('checkbox');
                    });
                }
            }
        });
    require_js_file(['table', 'form', 'jquery', 'tableExt', 'jqueryui','element','customUtil'],
        function (fnr) {
            var $ = layui.$;

            var vm = new Vue({
                el: "#root",
                data:{
                    CheckedSetting1:{title:'项目核算'},

                    CheckedSetting2:{title:'客户核算'},

                    CheckedSetting3:{title:'部门核算'},

                    CheckedSetting4:{title:'个人核算'},

                    BalanceTypeSetting:{
                        tags: { name: 'BalanceType' },
                        options: [
                            { key: "1", value: '贷方科目' },
                            { key: "0", value: '借方科目' },
                        ],
                        fields: { key: 'key', value: 'value' }
                    },
                    MoneySetting:{
                        tags: { name: 'MoneyLeft' },
                        options: [
                            { key: "1", value: '贷' },
                            { key: "0", value: '借' },
                        ],
                        fields: { key: 'key', value: 'value' }
                    },
                    isnew:'',
                    formList:{
                        ParentCode:fnr.getQueryString('ParentCode'),
                        Code:fnr.getQueryString('ParentCode'),
                        Name:'',
                        ProjectCheck:'0',
                        ClientCheck:'0',
                        DepartmentCheck:'0',
                        PersonCheck:'0',
                        BalanceType:'0',
                        MoneyLeft:0,
                        MoneyRight:0,
                        Enable: '1',
                        Company_ID: fnr.getQueryString('Company_ID'),
                    }
                },
                watch:{
                    'formList':{
　　　　　　　　　　    handler:function(val){
　　　　　　　　　　　　    this.formList.MoneyRight=Number(!Number(val.MoneyLeft))
　　　　　　　　　　    },
　　　　　　　　　　    deep:true
                    }
                },
                ready: function () {
                    this.isnew = fnr.getQueryString("isnew");
                    if (this.isnew != undefined) {
                        var query= fnr.getQueryString("ParentCode")
                        this.load(query);
                    } 
                },
                methods: {
                    //提交
                    Handlesubmit:function(e){
                        if (!layui.form.checkInput(e)) {
                            return false;
                        };
                        var self = this;
                        self.formList.Code = "100101";
                        console.log(self.formList);
                        if (self.isnew != undefined) {
                            $.post('/service/finance/Finance/UpdateFinanceCode', self.formList, function (res) {
                                if (res.SuccessResponse) {
                                    layer.msg(res.Message);
                                    fnr.callDialog("refresh");
                                    fnr.closeDialog();
                                } else {
                                    layer.msg(res.Message)
                                }
                            });
                        }
                        else {
                            $.post('/service/finance/Finance/InsertFinanceCode', self.formList, function (res) {
                                if (res.SuccessResponse) {
                                    layer.msg(res.Message);
                                    fnr.callDialog("refresh");
                                    fnr.closeDialog();
                                } else {
                                    layer.msg(res.Message)
                                }
                            });
                        }
                    },
                    //根据ID获取科目明细
                    load:function(query){
                        var self = this;
                        $.get("/service/finance/Finance/GetFinanceCodeDetail", { Company_ID: self.formList.Company_ID, query: query }, function (res) {
                            if(res.SuccessResponse){
                                fnr.mergeJson(res.Data,self.formList);
                            }
                        });
                    }
                }
            });
        });
</script>