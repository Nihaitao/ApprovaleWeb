<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>总账</title>
    <style>
        * {
            box-sizing: border-box;
        }
        .isDisplay {
            display: none;
        }
        .toggleNext {
            height: 39px;
            background: #fff;
            line-height: 39px;
            border: 1px solid #e2e2e2;
            border-top-color: transparent;
        }
            .toggleNext.active {
                background-color: #d1d1d1;
            }
        .padding20 {
            padding-left: 20px;
        }
        .padding40 {
            padding-left: 40px;
        }
        #listTable .layui-table-view{
            margin: 0;
        }
        .layui-icon.open{
            -webkit-transform: rotate(90deg);
            -moz-transform: rotate(90deg);
            transform: rotate(90deg);
        }
        i.layui-icon{
            display: inline-block;
            transition: transform 0.4s;
        }
        .normalText{
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }
    </style>
</head>
<body id="root" style="background: #ddd;">
    <div class="OpenContainer">
        <div class="layui-row" style="height: 80px;">
            <div class="layui-col-xs12" style="height: 100%; background: #F6F8F8;">
                <p style="line-height: 80px;text-align: center; font-size: 24px; border-radius: 3px;">总账</p>
            </div>
        </div>
        <div class="layui-row">
            <div class="layui-col-xs12" style="height: 50px; margin-top: 10px;">
                <div class="layui-form">
                    <div class="layui-inline">
                        <lay-date v-bind:value.sync="submitForm.time" type='year' initial="off"></lay-date>
                    </div>
                </div>
            </div>
        </div>
        <div class="layui-row">
            <div class="layui-col-xs3" style="margin-top: 10px;">
                <div class="layui-form">
                    <div class="layui-form-item">
                        <div class="layui-input-block" style="margin-left: 0;">
                            <input type="text" placeholder="请选择科目或搜索科目编码和名称" class="layui-input searchInput" @keyup="doSearch($event)">
                        </div>
                    </div>
                </div>
                <div class="treeData" style="height: 100%;">
                    <ul class="listBox isDisplay">
                        <tree v-bind:list="FirstListData"></tree>
                    </ul>
                </div>
            </div>
            <div class="layui-col-xs9" style="padding-left:15px;">
                <!--操作模板-->
                <table id="listTable" lay-filter="listTable" style="width: 100%; margin: 0;"></table> 
                
            </div>
        </div>
    </div>
</body>
</html>
<script src="../../../Resources/js/jquery.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/vue/vue.min.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/layui.js"></script>
<link href="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/layui.css" rel="stylesheet" />
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/require_config.js"></script>
<script src="../../../Resources/js/Controls/SortTable.js"></script>
<script>
    require_js_file(["table", "form", "jquery", "tableExt"],
        function (fnr) {
            var table = layui.table;
            var form = layui.form;
            var tableExt = layui.tableExt;
            var $ = layui.$;

            //绑定列表
            var listTable;
            GetParentQueryString = function (name) {
                var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
                var r = window.parent.location.search.substr(1).match(reg);
                if (r != null) return decodeURIComponent(r[2]);
                return undefined;
            };

            Vue.component('tree', {
                name: 'tree',
                props: ['list'],
                template: '<template  v-for="(index, item) in list">' +
                '   <li  v-bind:class="{toggleNext: true, active: index == 0}"  v-if="isEmpty(item.ChildList)" style="padding-left:{{item.Code.length/2*10 +20}}' + 'px' + ';">\n' +
                '       <a href="javascript:;" @click="TotalBuyPrice(item.Code, $event)">{{item.Code}} - {{item.Name}}</a>\n' +
                '   </li>\n' +
                '   <li v-bind:class="{toggleNext: true, active: index == 0}" v-else style="padding-left:{{item.Code.length == 1 ? item.Code.length*10 : item.Code.length/2*10}}' + 'px' + '">\n' +
                '       <i class="layui-icon" @click="toggleThis($event)" style="cursor: pointer;">&#xe602;</i>\n' +
                '       <a href="javascript:;" @click="TotalBuyPrice(item.Code, $event)">{{item.Code}} - {{item.Name}}</a>\n' +
                '   </li>\n' +
                '   <li><ul class="listBox isDisplay">\n' +
                '       <tree v-bind:list="item.ChildList"></tree>\n' +
                '   </ul></li>\n' +
                '</template>',
                ready: function () {
                    $('.listBox:first').css('display', 'block');
                    },
                    methods: {
                        isEmpty: function (v) {
                            return $.isEmptyObject(v);
                        },
                        toggleThis: function (e) {
                            var ev = e.srcElement || e.target || e.toElement;
                            if (!$(ev).hasClass('open')) {
                                $(ev).addClass('open');
                            } else {
                                $(ev).removeClass('open');
                            }
                            $(ev).parent('li').next().children('ul').slideToggle();
                        },
                        TotalBuyPrice: function (t, e) {
                            var ev = e.srcElement || e.target || e.toElement;
                            var $t = $(ev).parent('li');
                            if (!$t.hasClass('active')) {
                                $t.parents('.treeData').find('li').removeClass('active');
                                $t.addClass('active');
                            }
                            listTable.reload({
                                where: {
                                    Code: t,
                                    Stationproxy_ID: GetParentQueryString('ID'),
                                    Year: window.rootApp.submitForm.time
                                }
                            });
                        }
                    }
                });

            //表格基本配置参数
            var tableColsConfig =
                [
                    { align: 'center', field: 'Date', title: '期间', width: 150, sort: true },
                    {
                        align: 'center', title: '摘要', width: 480, sort: true, templet: function () {
                            return "<div class='normalText' title=" + (this.Describe) + ">" + (this.Describe) + "</div>";
                        }
                    },
                    { align: 'center', field: 'Value1', title: '借方', width: 150 },
                    { align: 'center', field: 'Value2', title: '贷方', width: 150 },
                    { align: 'center', field: 'Direction', title: '方向', width: 145 },
                    { align: 'center', field: 'Value3', title: '余额', width: 200 }
                ];

            window.rootApp = new Vue({
                el: "#root",
                data: {
                    submitForm: {
                        time: fnr.format(Date.now(), 'yyyy')
                    },
                    FirstListData: []
                },
                ready: function () {
                    this.GetFinanceCodeFn();
                },
                methods: {
                    doSearch: function (e) {
                        var ev = e.target || e.srcElement || e.toElement;
                    },
                    HandleData: function (data) {
                        var obj = {};
                        data = data.sort(function (a, b) {
                            return a.Code.length - b.Code.length;
                        });
                        var depthFind = function (code) {
                            if (code.length === 4) {
                                return obj;
                            } else {
                                var startNode = depthFind(code.substr(0, 4));
                                for (var i = 4; i < code.length; i += 2) {
                                    var tempNode = startNode["_" + code.substr(0, i)];
                                    if (tempNode) {
                                        startNode = tempNode._ChildList;
                                    }
                                }
                                return startNode;
                            }
                        }
                        data.map(function (v, k) {
                            v._ChildList = {};
                            depthFind(v.Code)["_" + v.Code] = v;
                        });
                        return obj;
                    },
                    toArray: function (data, deep) {
                        var self = this;
                        var retArray = [];
                        var sortFunc = function (a, b) {
                            return parseInt(a.Code) - parseInt(b.Code);
                        }
                        var loopSelf = function (obj) {
                            if (obj && obj._ChildList && !$.isEmptyObject(obj._ChildList)) {
                                obj.ChildList = [];
                                for (var k in obj._ChildList) {
                                    var val = obj._ChildList[k];
                                    obj.ChildList.push(val);
                                    loopSelf(val);
                                }
                                obj.ChildList.sort(sortFunc);
                            }
                        }
                        for (var k in data) {
                            var rootValue = data[k];
                            loopSelf(rootValue);
                            retArray.push(rootValue);
                        }
                        retArray.sort(sortFunc);
                        return retArray;
                    },
                    GetFinanceCodeFn: function () {
                        var self = this;
                        $.get('/service/finance/Finance/GetFinanceCodeValid', { Stationproxy_ID: GetParentQueryString('ID'), FinanceCodeType: 0, Valid: -1 }, function (res) {
                            if (res.SuccessResponse) {
                                if (res.Data) {
                                    var data = self.HandleData(res.Data);
                                    data = self.toArray(data);
                                    self.FirstListData = data;
                                    var newArr = res.Data;
                                    listTable = table.render({
                                        elem: '#listTable',
                                        even: true, //开启隔行背景
                                        //page: true, //页分,
                                        id: 'listTable',
                                        cols: [tableColsConfig],
                                        url: "/service/finance/Finance/GetTotalVoucherLedgerByYear",
                                        where: {
                                            Stationproxy_ID: GetParentQueryString('ID'),
                                            Code: self.FirstListData[0].Code,
                                            Year: window.rootApp.submitForm.time
                                        },
                                        response: {
                                            dataName: 'Data'
                                        }
                                    });
                                } else {
                                    layer.msg('返回值为空');
                                    listTable = '';
                                }
                            } else {
                                layer.msg(res.Message)
                            }
                        });
                    }
                }
            });

        });
</script>